# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debuglib64
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debuglib64)
  OBJDIR     = obj/x64/DebugLib
  TARGETDIR  = lib/debug
  TARGET     = $(TARGETDIR)/AmigaDX.wcx64
  DEFINES   += -DDEBUG
  INCLUDES  += -I../lib/adflib -I../lib/xdmslib -I../lib/zlib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -g -m64
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -shared -Wl,--out-implib="lib/debug/libAmigaDX.wcx64" -m64 -L/usr/lib64 dialog.o -L../lib/adflib/lib/debug -L../lib/xdmslib/lib/debug -L../lib/zlib/lib/debug
  LIBS      += -lzlib -ladflib -lxdmslib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	windres -i dialog.rc -o dialog.o -v
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp lib/debug/AmigaDX.wcx64 ../install
  endef
endif

ifeq ($(config),releaselib64)
  OBJDIR     = obj/x64/ReleaseLib
  TARGETDIR  = lib/release
  TARGET     = $(TARGETDIR)/AmigaDX.wcx64
  DEFINES   += -DNDEBUG
  INCLUDES  += -I../lib/adflib -I../lib/xdmslib -I../lib/zlib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -O3 -m64
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -shared -Wl,--out-implib="lib/release/libAmigaDX.wcx64" -m64 -L/usr/lib64 dialog.o -L../lib/adflib/lib/release -L../lib/xdmslib/lib/release -L../lib/zlib/lib/release
  LIBS      += -lzlib -ladflib -lxdmslib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	windres -i dialog.rc -o dialog.o -v
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp lib/release/AmigaDX.wcx64 ../install
  endef
endif

ifeq ($(config),debuglib32)
  OBJDIR     = obj/x32/DebugLib
  TARGETDIR  = lib/debug
  TARGET     = $(TARGETDIR)/AmigaDX.wcx
  DEFINES   += -DDEBUG
  INCLUDES  += -I../lib/adflib -I../lib/xdmslib -I../lib/zlib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -g -m32
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -shared -Wl,--out-implib="lib/debug/libAmigaDX.wcx" -m32 -L/usr/lib32 dialog.o -L../lib/adflib/lib/debug -L../lib/xdmslib/lib/debug -L../lib/zlib/lib/debug
  LIBS      += -lzlib -ladflib -lxdmslib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	windres -i dialog.rc -o dialog.o -v
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp lib/debug/AmigaDX.wcx64 ../install
  endef
endif

ifeq ($(config),releaselib32)
  OBJDIR     = obj/x32/ReleaseLib
  TARGETDIR  = lib/release
  TARGET     = $(TARGETDIR)/AmigaDX.wcx
  DEFINES   += -DNDEBUG
  INCLUDES  += -I../lib/adflib -I../lib/xdmslib -I../lib/zlib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -O3 -m32
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -shared -Wl,--out-implib="lib/release/libAmigaDX.wcx" -m32 -L/usr/lib32 dialog.o -L../lib/adflib/lib/release -L../lib/xdmslib/lib/release -L../lib/zlib/lib/release
  LIBS      += -lzlib -ladflib -lxdmslib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	windres -i dialog.rc -o dialog.o -v
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running post-build commands
	cp lib/release/AmigaDX.wcx64 ../install
  endef
endif

OBJECTS := \
	$(OBJDIR)/AmigaDX.o \
	$(OBJDIR)/bbk.o \
	$(OBJDIR)/settings.o \
	$(OBJDIR)/support.o \
	$(OBJDIR)/wcxapi.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking AmigaDX
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning AmigaDX
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/AmigaDX.o: AmigaDX.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/bbk.o: bbk.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/settings.o: settings.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/support.o: support.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/wcxapi.o: wcxapi.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
